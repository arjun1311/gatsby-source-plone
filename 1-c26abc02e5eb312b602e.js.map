{"version":3,"sources":["webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Breadcrumbs.js","webpack:///./src/components/NavBar.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_propTypes","_pageRenderer","_loader","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathname","pathname","React","createElement","InternalPageRenderer","propTypes","PropTypes","shape","string","isRequired","_gatsby","title","data","default","className","Link","to","items","map","item","key","_id","_path","_reactRedux","_createStore","_home","_chevronRight","NavBar","active","toggleNavigation","navigationExpanded","StaticQuery","query","render","aria-controls","aria-expanded","aria-label","type","onClick","id","ploneNavigation","filter","node","Set","has","startsWith","_","bool","func","p","connect","_ref2","dispatch","expanded","COLLAPSE_NAVIGATION","EXPAND_NAVIGATION","Error","Object","defineProperty","t","enumerable","get","u","withPrefix","navigate","push","replace","navigateTo","o","waitForRouteChange","d","c","StaticQueryContext","_gatsbyLink","_interopRequireWildcard","_waitForRouteChange","_publicPageRenderer","_parsePath","createContext","props","Consumer","staticQueryData","children","f","object","_reactHelmet","_Breadcrumbs","_NavBar","Header","Layout","breadcrumbs","length","concat","oneOfType","array","m","module","exports"],"mappings":"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","file":"1-c26abc02e5eb312b602e.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst Breadcrumbs = ({ data }) => (\n  <nav>\n    <ol className={'breadcrumb'}>\n      <li className={'breadcrumb-item'}>\n        <Link to=\"/\">Home</Link>\n      </li>\n      {data.items.map(item => (\n        <li key={item._id} className={'breadcrumb-item'}>\n          <Link to={item._path}>{item.title}</Link>\n        </li>\n      ))}\n    </ol>\n  </nav>\n);\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport { graphql, Link, StaticQuery } from 'gatsby';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { EXPAND_NAVIGATION, COLLAPSE_NAVIGATION } from '../state/createStore';\nimport MdHome from 'react-icons/lib/md/home';\nimport GoChevronRight from 'react-icons/lib/go/chevron-right';\n\nconst NavBar = ({ active, toggleNavigation, navigationExpanded }) => (\n  <StaticQuery\n    query={graphql`\n      query NavbarQuery {\n        ploneNavigation(_path: { eq: \"/\" }) {\n          items {\n            _id\n            _path\n            description\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light col-12\">\n        <span className=\"navbar-brand\">\n          <Link className=\"nav-link\" to=\"/\">\n            <MdHome /> GtsbSrcPlone\n          </Link>\n        </span>\n        <button\n          className=\"navbar-toggler\"\n          // eslint-disable-next-line\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded={navigationExpanded ? 'true' : 'false'}\n          aria-label=\"Toggle navigation\"\n          type=\"button\"\n          onClick={() => toggleNavigation(navigationExpanded)}\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div\n          className={\n            navigationExpanded\n              ? 'collapse navbar-collapse show'\n              : 'collapse navbar-collapse'\n          }\n          id=\"navbarSupportedContent\"\n        >\n          <ul className=\"navbar-nav mr-auto\">\n            {data.ploneNavigation.items\n              .filter(node => !new Set(['/', '/index/']).has(node._path))\n              .map(node => (\n                <li className=\"nav-item\" key={node._id}>\n                  <Link\n                    className={\n                      node._path === active ||\n                      (active || '').startsWith(node._path)\n                        ? 'nav-link active'\n                        : 'nav-link'\n                    }\n                    to={node._path}\n                  >\n                    <GoChevronRight className=\"hide-md-up\" />\n                    {node.title}\n                  </Link>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </nav>\n    )}\n  />\n);\n\nNavBar.propTypes = {\n  navigationExpanded: PropTypes.bool.isRequired,\n  toggleNavigation: PropTypes.func.isRequired,\n  active: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = ({ navigationExpanded }) => {\n  return { navigationExpanded };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleNavigation: expanded =>\n      expanded\n        ? dispatch({ type: COLLAPSE_NAVIGATION })\n        : dispatch({ type: EXPAND_NAVIGATION }),\n  };\n};\n\nconst ConnectedNavBar = connect(mapStateToProps, mapDispatchToProps)(NavBar);\n\nexport default ConnectedNavBar;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'gatsby';\n\nimport Breadcrumbs from './Breadcrumbs';\nimport NavBar from './NavBar';\n\nimport '../styles/index.scss';\n\nconst Header = () => (\n  <div className=\"jumbotron\">\n    <div className=\"display-4\">Plone plugin for Gatsby</div>\n    <p className=\"lead\">\n      One Plone site as CMS, unlimited individually branded deployments with\n      Gatsby.\n    </p>\n    <p className=\"lead\">\n      <Link\n        className={'btn btn-primary btn-lg'}\n        to=\"/tutorial/1_getting_started/\"\n      >\n        Learn more &raquo;\n      </Link>\n    </p>\n  </div>\n);\n\nconst Layout = ({ breadcrumbs, children, title }) => {\n  const node = children.length ? children[0].props.data : children.props.data;\n  const active = node ? (node._path === '/index/' ? '/' : node._path) : null;\n  return (\n    <div className=\"container-fluid\">\n      <Helmet\n        title={`${title ? title : node.title} – Gatsby source plugin for Plone`}\n      />\n      <div className=\"row no-gutters'\">\n        <NavBar active={active} />\n        <div className=\"col-12\">\n          {node && node._path === '/index/' ? <Header /> : null}\n          {breadcrumbs ? (\n            <Breadcrumbs data={breadcrumbs} active={active} />\n          ) : null}\n          <div className=\"main-content\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nexport default Layout;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n"],"sourceRoot":""}